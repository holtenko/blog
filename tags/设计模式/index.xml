<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>设计模式 on holten-blog</title><link>https://holtenko.github.io/blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>Recent content in 设计模式 on holten-blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 22 Mar 2018 14:37:45 +0000</lastBuildDate><atom:link href="https://holtenko.github.io/blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>没事学点设计模式-单例模式</title><link>https://holtenko.github.io/blog/2018/03/22/design-pattern-4/</link><pubDate>Thu, 22 Mar 2018 14:37:45 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/03/22/design-pattern-4/</guid><description>系列回顾 没事学点设计模式-概览 没事学点设计模式-工厂模式 没事学点设计模式-抽象工厂模式 简介 单例模式（Singleton Pattern）可以说</description></item><item><title>没事学点设计模式-抽象工厂模式</title><link>https://holtenko.github.io/blog/2018/02/12/design-pattern-3/</link><pubDate>Mon, 12 Feb 2018 13:56:14 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/02/12/design-pattern-3/</guid><description>系列回顾 没事学点设计模式-概览 没事学点设计模式-工厂模式 简介 抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。</description></item><item><title>没事学点设计模式-工厂模式</title><link>https://holtenko.github.io/blog/2017/09/29/design-pattern-2/</link><pubDate>Fri, 29 Sep 2017 09:23:52 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/29/design-pattern-2/</guid><description>系列回顾 没事学点设计模式-概览 简介 工厂模式（Factory Pattern）是一种最常用的设计模式。这种类型的设计模式属于创建型模式，它提供了</description></item><item><title>没事学点设计模式-概览</title><link>https://holtenko.github.io/blog/2017/09/11/design-pattern-1/</link><pubDate>Mon, 11 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/11/design-pattern-1/</guid><description>什么是设计模式 设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。设计模式使代码编制真正工程化，可以说设计模式是软</description></item></channel></rss>