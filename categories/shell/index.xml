<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on holten-blog</title><link>https://holtenko.github.io/blog/categories/shell/</link><description>Recent content in Shell on holten-blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Mar 2016 19:55:58 +0000</lastBuildDate><atom:link href="https://holtenko.github.io/blog/categories/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>StarUML 3.0.1 激活教程</title><link>https://holtenko.github.io/blog/2018/07/30/staruml-activate/</link><pubDate>Mon, 30 Jul 2018 21:18:10 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/07/30/staruml-activate/</guid><description>安装asar npm install -g asar 解压app.asar 进入到app.asar目录下执行当前命令。默认文件路径Windows是C:\Program Files</description></item><item><title>没事学点设计模式-单例模式</title><link>https://holtenko.github.io/blog/2018/03/22/design-pattern-4/</link><pubDate>Thu, 22 Mar 2018 14:37:45 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/03/22/design-pattern-4/</guid><description>系列回顾 没事学点设计模式-概览 没事学点设计模式-工厂模式 没事学点设计模式-抽象工厂模式 简介 单例模式（Singleton Pattern）可以说</description></item><item><title>web.xml配置过程中的常见错误</title><link>https://holtenko.github.io/blog/2018/02/24/web-xml-error/</link><pubDate>Sat, 24 Feb 2018 14:58:29 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/02/24/web-xml-error/</guid><description>The content of element type &amp;ldquo;web-app&amp;rdquo; must match 问题原因 web.xml中&amp;lt;web-app&amp;gt;标签的元素个数和排序规则是有限制的，大多数情况下出现该错误的原因是元素</description></item><item><title>没事学点设计模式-抽象工厂模式</title><link>https://holtenko.github.io/blog/2018/02/12/design-pattern-3/</link><pubDate>Mon, 12 Feb 2018 13:56:14 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/02/12/design-pattern-3/</guid><description>系列回顾 没事学点设计模式-概览 没事学点设计模式-工厂模式 简介 抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。</description></item><item><title>如何正确地给 github 的开源项目提交 pull request</title><link>https://holtenko.github.io/blog/2018/01/30/pullrequest-github/</link><pubDate>Tue, 30 Jan 2018 15:51:27 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/01/30/pullrequest-github/</guid><description>fork 原始仓库 clone 自己的仓库 在 master 分支添加原始仓库为远程分支 git remote add upstream 远程仓库 自己分支开发，如 dev 分支开发：git checkout -b dev 本地 dev 提交 切换 master 分支，同步原始仓</description></item><item><title>Tomcat常见错误</title><link>https://holtenko.github.io/blog/2018/01/30/tomcat-errors/</link><pubDate>Tue, 30 Jan 2018 11:35:26 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/01/30/tomcat-errors/</guid><description>HTTP Status 500 - java.lang.IllegalStateException: No output folder 原因 此错误一般是由于解压缩版的Tomcat没有合理分配权限导致的。 解决方案 可通过修改Tomcat目录权限，或修改其拥有者来解</description></item><item><title>IntelliJIdea快捷键</title><link>https://holtenko.github.io/blog/2018/01/23/intellij-idea-keymap/</link><pubDate>Tue, 23 Jan 2018 17:05:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2018/01/23/intellij-idea-keymap/</guid><description>Ctrl+Shift+方向键Up/Down 代码向上/下移动 Ctrl+X 删除行 Ctrl+Y 也是删除行，不知道有啥区别 Ctrl+D 复制行 Ctrl+Alt+L 格式化代码 Ctrl+N 查找类 Ctrl+Shift+N 查找文件 Alt+Enter 智能导</description></item><item><title>没事学点设计模式-工厂模式</title><link>https://holtenko.github.io/blog/2017/09/29/design-pattern-2/</link><pubDate>Fri, 29 Sep 2017 09:23:52 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/29/design-pattern-2/</guid><description>系列回顾 没事学点设计模式-概览 简介 工厂模式（Factory Pattern）是一种最常用的设计模式。这种类型的设计模式属于创建型模式，它提供了</description></item><item><title>FTP常见错误及解决方案</title><link>https://holtenko.github.io/blog/2017/09/18/ftp-errors-and-solutions/</link><pubDate>Mon, 18 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/18/ftp-errors-and-solutions/</guid><description>227 Entering Passive Mode 响应: 227 Entering Passive Mode (192,168,1,16,221,111). 命令: LIST 错误: 连接超时 错误: 读取目录列表失败 解决方法： 打开/etc/vsftpd/vsftpd.conf在最后面加入</description></item><item><title>CentOS下FTP服务器安装与配置</title><link>https://holtenko.github.io/blog/2017/09/17/ftp-install-centos/</link><pubDate>Sun, 17 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/17/ftp-install-centos/</guid><description>安装vsftpd yum install vsftpd 启动/重启/关闭vsftpd服务器 CentOS7 以下： 启动: service vsftpd start 停止: service vsftpd stop 重启: service vsftpd restart 执行完成后可以使用service vsftpd sta</description></item><item><title>Mac下更新Vim到最新版本</title><link>https://holtenko.github.io/blog/2017/09/16/update-vim-mac/</link><pubDate>Sat, 16 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/16/update-vim-mac/</guid><description>目前，Mac内置的Vim是7.3版本的，而且还缺少很多功能，下面介绍如何通过源码安装更新最新版本的Vim，同时保留系统内置的Vim。 # 下载V</description></item><item><title>树莓派系统安装配置</title><link>https://holtenko.github.io/blog/2017/09/13/raspberry-setup/</link><pubDate>Wed, 13 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/13/raspberry-setup/</guid><description>系统安装 格式化内存卡。一定要为FAT32，Windows下32G以上内存卡可用guiformat-x64.exe格式化。 将NOOBS_v2_</description></item><item><title>静态变量的自动注入值</title><link>https://holtenko.github.io/blog/2017/09/12/static-variables-di/</link><pubDate>Tue, 12 Sep 2017 18:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/12/static-variables-di/</guid><description>做项目的时候有可能会经常发生这样的事情，就是要在静态方法里面调用其他类的方法，如果直接new一个出来的话，有可能会造成该类和该类里面的其他依</description></item><item><title>markdown语法</title><link>https://holtenko.github.io/blog/2017/09/11/markdown-syntax/</link><pubDate>Mon, 11 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/11/markdown-syntax/</guid><description>标题 在这段文字前加 # 号即可。 # 一级标题 ## 二级标题 ### 三级标题 以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。 列表 列表的显示</description></item><item><title>没事学点设计模式-概览</title><link>https://holtenko.github.io/blog/2017/09/11/design-pattern-1/</link><pubDate>Mon, 11 Sep 2017 15:27:00 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/09/11/design-pattern-1/</guid><description>什么是设计模式 设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。设计模式使代码编制真正工程化，可以说设计模式是软</description></item><item><title>Spring Boot那些事(0)-入门篇</title><link>https://holtenko.github.io/blog/2017/07/21/spring-boot-0-intro/</link><pubDate>Fri, 21 Jul 2017 16:21:53 +0000</pubDate><guid>https://holtenko.github.io/blog/2017/07/21/spring-boot-0-intro/</guid><description>什么是Spring Boot 读研期间主要写的是Java后端，工作之后开始更多地接触Node.js写后端程序，有对比才有伤害，让我深深的感受到了Jav</description></item><item><title>Java中创建线程的两种方式</title><link>https://holtenko.github.io/blog/2016/10/17/java-create-threads/</link><pubDate>Mon, 17 Oct 2016 16:10:15 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/10/17/java-create-threads/</guid><description>前言 多线程是我们开发过程中经常遇到的，也是必不可少需要掌握的。当我们知道需要进行多线程开发时首先需要知道的自然是如何实现多线程，也就是我们应</description></item><item><title>Java中字符串内存位置浅析</title><link>https://holtenko.github.io/blog/2016/08/16/string-memory/</link><pubDate>Tue, 16 Aug 2016 13:12:56 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/08/16/string-memory/</guid><description>前言 之前写过一篇关于JVM内存区域划分的文章，但是昨天接到蚂蚁金服的面试，问到JVM相关的内容，解释一下JVM的内存区域划分，这部分答得还不</description></item><item><title>Lombok介绍及使用方法</title><link>https://holtenko.github.io/blog/2016/08/02/lombok-introduction/</link><pubDate>Tue, 02 Aug 2016 11:19:01 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/08/02/lombok-introduction/</guid><description>lombok简介 lombok是暑假来到公司实习的时候发现的一个非常好用的小工具，刚见到的时候就感觉非常惊艳，有一种相见恨晚的感觉，用了一段时</description></item><item><title>排序算法之冒泡排序</title><link>https://holtenko.github.io/blog/2016/05/08/bubble-sort/</link><pubDate>Sun, 08 May 2016 16:43:27 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/05/08/bubble-sort/</guid><description>算法简介 冒泡排序是一种最基础也是最简单的排序算法，它是一种稳定排序算法，其平均时间复杂度为\(O(n^2)\)，空间复杂度为\(O(1)\)</description></item><item><title>JVM内存回收对象及引用分析</title><link>https://holtenko.github.io/blog/2016/04/21/jvm-gc-object-reference/</link><pubDate>Thu, 21 Apr 2016 21:58:36 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/04/21/jvm-gc-object-reference/</guid><description>自动垃圾回收是Java相较于C++的一个重要的特点，想了解JVM的垃圾回收机制，首先我们要知道垃圾回收是回收什么地方的垃圾，我在我的上一篇博</description></item><item><title>JVM内存区域划分</title><link>https://holtenko.github.io/blog/2016/04/09/jvm-memory-area/</link><pubDate>Sat, 09 Apr 2016 15:20:35 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/04/09/jvm-memory-area/</guid><description>学习Java不可避免的要学习Java虚拟机，也就是JVM，Java虚拟机规范里面规定了程序运行期间会使用到的运行时数据区，这也是JVM的内存</description></item><item><title>iTerm2和oh-my-zsh的个性化定制</title><link>https://holtenko.github.io/blog/2016/03/17/iterm2-with-ohmyzsh/</link><pubDate>Thu, 17 Mar 2016 19:55:58 +0000</pubDate><guid>https://holtenko.github.io/blog/2016/03/17/iterm2-with-ohmyzsh/</guid><description>终于在某东做活动新入手了一台air，看身边小伙伴的mac的终端感觉好炫酷，于是乎准备自己也捯饬捯饬，google了一下，发现了osx平台上的</description></item><item><title>Java利用Rxtx进行串口通讯</title><link>https://holtenko.github.io/blog/2015/12/05/rxtx-comm/</link><pubDate>Sat, 05 Dec 2015 16:04:02 +0000</pubDate><guid>https://holtenko.github.io/blog/2015/12/05/rxtx-comm/</guid><description>最近在做传感器数据采集的工作，底层是基于Zigbee的无线传感网络，所有数据采集到Zigbee协调器上然后通知上位机数据采集完成，上位机通过</description></item><item><title>CentOS下通过源码安装最新版Git</title><link>https://holtenko.github.io/blog/2015/12/05/git-install-with-source/</link><pubDate>Sat, 05 Dec 2015 14:53:30 +0000</pubDate><guid>https://holtenko.github.io/blog/2015/12/05/git-install-with-source/</guid><description>下载源码 到Git的Github主页上下载最新的源码到本地，解压并进入目录。 编译安装 cd 你的git源码目录 autoconf ./configure make 第一个报错 报错内容： usr/bin/perl Makefile.PL PREFIX='/usr/local/git' INSTALL_BASE='' --localedir='/usr/local/git/share/locale' Can't</description></item><item><title>Linux环境下RPM方式JDK安装及配置</title><link>https://holtenko.github.io/blog/2015/11/25/jdk-install/</link><pubDate>Wed, 25 Nov 2015 13:48:22 +0000</pubDate><guid>https://holtenko.github.io/blog/2015/11/25/jdk-install/</guid><description>jdk下载 这个到java的官方网站下载自己需要的版本就好了，这里下载了jdk1.7版本的，选择下载了rpm包jdk-7u79-linux-x</description></item></channel></rss>